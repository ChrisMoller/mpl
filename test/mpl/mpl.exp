set tool "mpl"
set exp_internal 1
set gradeup1 "a= 5 7 3 8; a\[>a\]"
set gradedn1 "a= 5 7 3 8; a\[<a\]"
#set xfail_flag 1
#
# note that in te following, the operation "transpose" is really supposed
# to be a dollar sign, but i can't figure out how to make tcl emit a dollar
# sign.
#
set testdata {
   {"\"/.5\""           "2" }
   {"\"-5\""           "-5" }
   {"\"-~5\""           "5" }
   {"\"transpose 2 3#::6\""    "0 3" }
   {"\"ln e^2\""        "2" }
   {"\"log 10^2\""        "2" }
   {"\"ln exp 2\""        "2" }
   {"\"root 4\""        "2" }
    {"\"sin pi / 6\""     "0.5" }
    {"\"cos 2*pi / 6\""     "0.5" }
    {"\"tan pi / 4\""     "1" }
    {"\"asin sin 1\""     "1" }
    {"\"acos cos 1\""     "1" }
    {"\"atan tan 1\""     "1" }
    {"\"sind 30\""     "0.5" }
    {"\"cosd 60\""     "0.5" }
    {"\"tand 45\""     "1" }
    {"\"asind sind 1\""     "1" }
    {"\"acosd cosd 1\""     "1" }
    {"\"atand tand 1\""     "1" }
    {"\"|~1\""     "1" }
    {"\"|1\""     "1" }
    {"\"!5\""     "120" }
    {"\"ceil 1.5\""     "2" }
    {"\"floor 1.5\""    "1" }
    {"\"round 1.6\""    "2" }
    {"\"round 1.4\""    "1" }
    {"\"> 5 7 3 8\""    "2 0 1 3" }
    {"\"$gradeup1\""    "3 5 7 8" }
    {"\"< 5 7 3 8\""    "3 1 0 2" }
    {"\"$gradedn1\""    "8 7 5 3" }
    {"\"#2 3#::6\""    "2 3" }
    {"\"::6\""    "0 1 2 3 4 5" }
    {"\"transpose 2 3#::6\""    "0 3" }
    
   {"\"2*3\""           "6" }
   {"\"3/2\""         "1.5" }
   {"\"(2+3)\""         "5" }
   {"\"2-3\""          "-1" }
   {"\"(1 0) transpose 2 3#::6\""    "0 3" }
   {"\"2^3\""          "8" }
   {"\"10 log 100\""      "2" }
   {"\"e log e\""      "1" }
   {"\"3 root 8\""      "2" }
   {"\"inf atan 1\""      "0" }
   {"\"1 atand 1\""      "45" }
   {"\"a=4;a\""      "4" }
   {"\"2 3#::6\""    "0 1 2" }
   {"\"6::4\""    "6 5 4" }
   {"\"4::6\""    "4 5 6" }
   {"\"4::6\""    "4 5 6" }
   {"\"4?=4\""    "true" }
   {"\"4?=6\""    "false" }
   {"\"4?<4\""    "false" }
   {"\"4?<6\""    "true" }
   {"\"6?<4\""    "false" }
   {"\"4?>4\""    "false" }
   {"\"4?>6\""    "false" }
   {"\"6?>4\""    "true" }
   {"\"4?<=4\""    "true" }
   {"\"4?<=6\""    "true" }
   {"\"6?<=4\""    "false" }
   {"\"4?>=4\""    "true" }
   {"\"4?>=6\""    "false" }
   {"\"6?>=4\""    "true" }
}

global MPL
foreach pattern $testdata {
    set inputs [lindex $pattern 0]
    eval "spawn $MPL -e $inputs"
    expect {
        -re [lindex $pattern 1] {
            pass $inputs
        }
        default { fail $inputs}
    }
}
      
